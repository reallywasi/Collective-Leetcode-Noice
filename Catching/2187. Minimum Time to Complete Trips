class Solution {
public:
    long long  tripstaken(vector<int>& time, long long t) {
        long long  taken = 0;
        for (int i = 0; i < time.size(); i++) {
            taken += t / time[i];
        }
        return taken;
    }

    long long minimumTime(vector<int>& time, int totalTrips) {

        int n = time.size();
        long long  low=0;
        long long  high=1e14;
        long long ans;

        while(low<=high)
        {
            long long mid =(low+high)/2;

            if(tripstaken(time,mid)>=totalTrips){
                ans=mid;
                high=mid-1;
            }
            else { low=mid+1;}
        }
        return ans;


    }
};
