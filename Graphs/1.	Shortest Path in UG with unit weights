class Solution {
  public:
    vector<int> shortestPath(vector<vector<int>>& adj, int src) {
        int n=adj.size();
        vector<int>distance(n,-1);     vector<int>visited(n,0);
        queue<int>q;                 
        q.push(src);
        distance[src]=0;             visited[src]=1;
        while(!q.empty())
        {
            int node =q.front();     q.pop();
            for(int neighbour : adj[node])
            {
                if(visited[neighbour]==0){
                    q.push(neighbour);
                    visited[neighbour]=1;
                    distance[neighbour]=distance[node]+1;
                }
            }
        }   return distance;
    }
};
